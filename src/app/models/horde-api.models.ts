/**
 * Type definitions for AI Horde public API
 * API Documentation: https://aihorde.net/api/
 */

export type HordeModelType = 'image' | 'text';

export type HordeModelState = 'known' | 'custom' | 'all';

export interface HordeModelStatus {
  /**
   * Performance metric (varies by model type)
   */
  performance: number;

  /**
   * Number of queued requests (for image: pixelsteps, for text: tokens)
   */
  queued: number;

  /**
   * Number of active jobs
   */
  jobs: number;

  /**
   * Estimated time to completion in seconds
   */
  eta: number;

  /**
   * Model type (image or text)
   */
  type: HordeModelType;

  /**
   * Model name
   */
  name: string;

  /**
   * Number of workers serving this model
   */
  count: number;
}

export type HordeModelStatsTimePeriod = Record<string, number>;

export interface HordeModelStatsResponse {
  /**
   * Statistics for the past day
   */
  day: HordeModelStatsTimePeriod;

  /**
   * Statistics for the past month
   */
  month: HordeModelStatsTimePeriod;

  /**
   * All-time statistics
   */
  total: HordeModelStatsTimePeriod;
}

export interface HordeTotalStatsTimePeriod {
  /**
   * Number of images generated (for image type)
   */
  images?: number;

  /**
   * Number of requests processed
   */
  requests?: number;

  /**
   * Number of tokens processed (for text type)
   */
  tokens?: number;

  /**
   * Pixelsteps (for image type)
   */
  ps?: number;
}

export interface HordeTotalStatsResponse {
  /**
   * Statistics for the past minute
   */
  minute: HordeTotalStatsTimePeriod;

  /**
   * Statistics for the past hour
   */
  hour: HordeTotalStatsTimePeriod;

  /**
   * Statistics for the past day
   */
  day: HordeTotalStatsTimePeriod;

  /**
   * Statistics for the past month
   */
  month: HordeTotalStatsTimePeriod;

  /**
   * All-time statistics
   */
  total: HordeTotalStatsTimePeriod;
}

export interface HordeModelUsageStats {
  /**
   * Usage count for the past minute
   */
  minute?: number;

  /**
   * Usage count for the past hour
   */
  hour?: number;

  /**
   * Usage count for the past day
   */
  day: number;

  /**
   * Usage count for the past month
   */
  month: number;

  /**
   * All-time usage count
   */
  total: number;
}

export interface HordeWorkerTeam {
  /**
   * Team name
   */
  name: string | null;

  /**
   * Team ID (UUID)
   */
  id: string | null;
}

export interface HordeKudosDetails {
  /**
   * Kudos generated from work completed
   */
  generated: number;

  /**
   * Kudos from uptime
   */
  uptime: number;
}

interface HordeWorkerBase {
  /**
   * Worker name
   */
  name: string;

  /**
   * Worker ID (UUID)
   */
  id: string;

  /**
   * Worker type (image or text)
   */
  type: HordeModelType;

  /**
   * Performance metric as a string (e.g., "0.4 megapixelsteps per second")
   */
  performance: string;

  /**
   * Number of requests fulfilled by this worker
   */
  requests_fulfilled: number;

  /**
   * Total kudos rewards earned
   */
  kudos_rewards: number;

  /**
   * Kudos breakdown by source
   */
  kudos_details: HordeKudosDetails;

  /**
   * Number of worker threads
   */
  threads: number;

  /**
   * Total uptime in seconds
   */
  uptime: number;

  /**
   * Number of jobs not yet completed
   */
  uncompleted_jobs: number;

  /**
   * Whether worker is in maintenance mode
   */
  maintenance_mode: boolean;

  /**
   * Whether worker serves NSFW content
   */
  nsfw: boolean;

  /**
   * Whether worker is trusted
   */
  trusted: boolean;

  /**
   * Whether worker is flagged
   */
  flagged: boolean;

  /**
   * Whether worker is currently online
   */
  online: boolean;

  /**
   * List of model names this worker serves
   */
  models: string[];

  /**
   * Team information (if worker belongs to a team)
   */
  team: HordeWorkerTeam;

  /**
   * Bridge agent information (software/version)
   */
  bridge_agent: string;
}

export interface HordeImageWorker extends HordeWorkerBase {
  type: 'image';

  /**
   * Maximum pixels this worker can process
   */
  max_pixels: number;

  /**
   * Total megapixelsteps generated by this worker
   */
  megapixelsteps_generated: number;

  /**
   * Whether worker supports img2img
   */
  img2img: boolean;

  /**
   * Whether worker supports inpainting
   */
  painting: boolean;

  /**
   * Whether worker supports post-processing
   */
  'post-processing': boolean;

  /**
   * Whether worker supports LoRA models
   */
  lora: boolean;

  /**
   * Whether worker supports ControlNet
   */
  controlnet: boolean;

  /**
   * Whether worker supports SDXL ControlNet
   */
  sdxl_controlnet: boolean;
}

export interface HordeTextWorker extends HordeWorkerBase {
  type: 'text';

  /**
   * Maximum token length this worker can generate
   */
  max_length: number;

  /**
   * Maximum context length this worker supports
   */
  max_context_length: number;

  /**
   * Additional worker information
   */
  info?: string;
}

export type HordeWorker = HordeImageWorker | HordeTextWorker;
